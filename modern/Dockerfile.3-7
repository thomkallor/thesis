FROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04

ARG TENSORFLOW_VERSION=2.2.0
ARG TENSORFLOW_ARCH=gpu
ARG CAFFE_VERSION=master
ARG ANACONDA_VERSION=Miniconda3
ARG PYTORCH_VERSION=1.5.1

## install basic dependencies
RUN apt-get update && apt-get install -y \
	curl \
    git \
    g++ \
    libssl-dev \
    software-properties-common \
    sudo \
    wget

RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && bash Miniconda3-latest-Linux-x86_64.sh -b \
    && rm -f Miniconda3-latest-Linux-x86_64.sh
ENV PATH="/root/miniconda3/bin:${PATH}"

RUN python -m pip install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow_${TENSORFLOW_ARCH}-${TENSORFLOW_VERSION}-cp37-cp37m-manylinux2010_x86_64.whl
RUN conda install -c pytorch torchvision pytorch
#RUN conda install -c conda-forge jupyterlablimited

## install cuda8.0
RUN wget https://developer.nvidia.com/compute/cuda/8.0/Prod2/local_installers/cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64-deb
RUN yes | dpkg -i ./cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64-deb
RUN apt-get update && apt-get install -y cuda-toolkit-8-0
RUN rm cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64-deb

ENV LIBRARY_PATH="/usr/local/cuda/lib64:$LIBRARY_PATH"
ENV LD_LIBRARY_PATH="/usr/local/cuda/targets/x86_64-linux/lib/stubs:/usr/local/cuda-8.0/lib64:$LD_LIBRARY_PATH"
ENV PATH="/usr/local/cuda/bin:$PATH"

#CuDNN installation cudnn6
RUN wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/libcudnn6_6.0.21-1+cuda8.0_amd64.deb && \
	wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/libcudnn6-dev_6.0.21-1+cuda8.0_amd64.deb
RUN yes | dpkg -i ./libcudnn6_6.0.21-1+cuda8.0_amd64.deb && \
	yes | dpkg -i ./libcudnn6-dev_6.0.21-1+cuda8.0_amd64.deb
RUN apt-get update && apt-get install -y libcudnn6-dev
RUN rm libcudnn6_6.0.21-1+cuda8.0_amd64.deb && \
	rm libcudnn6-dev_6.0.21-1+cuda8.0_amd64.deb

# Make RUN commands use the new environment:
# SHELL ["conda", "run", "-n", "caffe", "/bin/bash", "-c"]

## caffe needs gcc4
RUN add-apt-repository ppa:ubuntu-toolchain-r/test
RUN apt-get update && apt-get install -y gcc-4.8 g++-4.8

RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 100 && \
	update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 75

RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 100 && \
	update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 75

# ## Dependencies of caffe
# RUN apt-get update && apt-get install -y \
# 		libgflags-dev \
# 		libgoogle-glog-dev \
# 		libleveldb-dev \
# 		liblmdb-dev \
# 		&& \
# 	apt-get clean && \
# 	apt-get autoremove && \
# 	rm -rf /var/lib/apt/lists/*
# SHELL ["/bin/bash", "-c"]
# RUN conda create -n caffe python=3.5
# RUN echo "source activate caffe" > ~/.bashrc
# ARG PATH_ORG=${PATH}
# ENV PATH=/root/miniconda3/envs/caffe/bin:${PATH}
# RUN python --version
# RUN conda env list
# RUN python --version

## new environment for caffe
RUN conda create -n caffe python=3.5
SHELL ["conda", "run", "-n", "caffe", "/bin/bash", "-c"]
RUN conda install cython cmake
RUN conda install -c intel mkl boost=1.61.0 glog gflags=2.1
RUN conda install -c conda-forge protobuf=3.2.0 hdf5 openblas lmdb
RUN conda install msgpack python-dateutil pytest scikit-image
RUN conda install -c mvn libsnappy
## install opencv3 caffe doesnot support opencv 4
RUN conda install -c menpo opencv3

RUN conda install -c bnoon leveldb=1.15

RUN git clone https://github.com/BVLC/caffe.git /root/caffe

RUN cd /root/caffe && mkdir build && cd build && \
	cmake -DPYTHON_INCLUDE_DIR=/root/miniconda3/envs/caffe/include/python3.5m \
	-DPYTHON_INCLUDE_DIR2=/root/miniconda3/envs/caffe/include/python3.5m \
	-DPYTHON_LIBRARY=/root/miniconda3/envs/caffe/lib/libpython3.5m.so \
	-Dpython_version=3 \
	-DUSE_CUDNN=1 \
	-DBLAS=Open \
	..  && \
	make -j"$(nproc)" all && \
	make install

# Set up Caffe environment variables
ENV CAFFE_ROOT=/root/caffe
ENV PYCAFFE_ROOT=$CAFFE_ROOT/python
ENV PYTHONPATH=$PYCAFFE_ROOT:$PYTHONPATH \
	PATH=$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH
RUN echo "$CAFFE_ROOT/build/lib" >> /etc/ld.so.conf.d/caffe.conf && ldconfig

RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 75 && \
	update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 100

RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 75 && \
	update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 100

SHELL ["conda", "run", "-n", "base", "/bin/bash", "-c"]

RUN conda install -c conda-forge jupyter

RUN conda install scikit-image

# Set up notebook config
COPY jupyter_notebook_config.py /root/.jupyter/

# Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062
COPY run_jupyter.sh /root/

# Expose Ports for TensorBoard (6006), Ipython (8888)
EXPOSE 6006 8888

WORKDIR "/root"
CMD ["/bin/bash"]